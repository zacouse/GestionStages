
@{
    ViewData["Title"] = ViewBag.PageTitle;
}

<div style="font-size:36px;text-align:center;padding-top:5%" class="light-blue-text row">
    <div class="col s12">
        <i style="font-size:48px;vertical-align:middle;" class="material-icons orange-text">@Html.Raw(ViewBag.IconTitle)</i>
        @ViewBag.PageTitle
    </div>
    <div class="col push-l4 l4 push-m3 m6 s12">
        <hr />
    </div>
</div>

@{
    Stage StageAModifier = ViewBag.LeStage != null ? ViewBag.LeStage : new Stage();
    if (StageAModifier.IDStage == 0)
    {
        StageAModifier.Etat = true;
    }
}

<form class="col s12" name="form" id="form" method="post" onsubmit="return validateForm()" action="@Url.Action("SaveStage", "Stage", new { id = StageAModifier.IDStage })">
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            <select id="TxtMilieuStage" name="TxtMilieuStage" required>
                @{
                    List<MilieuStage> lesMilieus = ViewBag.lesMilieus;
                    for (int i = 0; i < lesMilieus.Count; i++)
                    {
                        if (StageAModifier.IDMilieuStage == @lesMilieus[i].IDMilieuStage)
                        {
                            <option type="hidden" selected value="@lesMilieus[i].IDMilieuStage">@lesMilieus[i].Titre</option>
                        }
                        else
                        {
                            <option type="hidden" value="@lesMilieus[i].IDMilieuStage">@lesMilieus[i].Titre</option>
                        }
                    }
                }
            </select>
            @Html.Label("TxtMilieuStage", @lang.ListeMilieuStage)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            @Html.TextBox("TxtTitre", @Html.Raw(StageAModifier.Titre), new { @class = "validate", maxlength = "100", required = "required" })
            @Html.Label("TxtTitre", @lang.Titre)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            <textarea id="TxtaDescription" name="TxtaDescription" class="materialize-textarea validate" maxlength="1000" required>@Html.Raw(StageAModifier.Description)</textarea>
            @Html.Label("TxtaDescription", @lang.Description)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            @Html.TextBox("TxtNbPostes", StageAModifier.NbPostes == 0 ? @Html.Raw("") : @Html.Raw(StageAModifier.NbPostes), new { @class = "validate", required = "required" })
            @Html.Label("TxtNbPostes", @lang.NombreDePostes)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            <select id="TxtStatut" name="TxtStatut" class="Validate" required>
                <option value="0">@lang.TempsPleins</option>
                <option value="1">@lang.TempsPartiel</option>
            </select>
            @Html.Label("TxtStatut", @lang.Statut)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            <select id="TxtPeriodeTravail" name="TxtPeriodeTravail" class="Validate" required>
                <option value="0">@lang.Jour</option>
                <option value="1">@lang.Soiree</option>
                <option value="2">@lang.Nuit</option>
            </select>
            @Html.Label("TxtPeriodeTravail", @lang.PeriodeDeTravail)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            @Html.TextBox("TxtNombreDHeureParSemaine", StageAModifier.NbHeureSemaine == 0 ? @Html.Raw("") : @Html.Raw(StageAModifier.NbHeureSemaine), new { @class = "validate", required = "required" })
            @Html.Label("TxtNombreDHeureParSemaine", @lang.NombreDHeureParSemaine)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            @Html.TextBox("TxtDateDeDebut", @Html.Raw(StageAModifier.DateDebut.ToShortDateString()), new { @class = "validate datepicker", placeholder = "AAAA-MM-JJ", required = "required" })
            @Html.Label("TxtDateDeDebut", @lang.DateDeDebut)
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12">
            @Html.TextBox("TxtDateDeFin", @Html.Raw(StageAModifier.DateFin.ToShortDateString()), new { @class = "validate datepicker", placeholder = "AAAA-MM-JJ", required = "required" })
            @Html.Label("TxtDateDeFin", @lang.DateDeFin)
        </div>
    </div>
    <div class="row">
        @Html.Label(@lang.Restrictions)
        <div id="ListesRestrictions" class="input-field col push-m3 m6 s12">
            <div class="col m4 s6 black-text">
                @Html.Raw(@lang.RestrictionDisponnible)
                <ul id="sortable1" class="connectedSortable grey">
                </ul>
            </div>
            <div id="Apres" class="col push-m4 m4 s6">
                @Html.Raw(@lang.RestrictionsActives)
                <ul id="sortable2" class="connectedSortable grey">
                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <div class="switch" style="text-align:center">
                <label>
                    @Html.Label("ChkEtat", @lang.Inactif)
                    <input id="ChkEtat" name="ChkEtat" type="checkbox" checked="@StageAModifier.Etat">
                    <span class="lever"></span>
                    @lang.Actif
                </label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col push-m3 m2 s4">
            <a class="waves-effect waves-light btn grey" href="@Html.Raw(ViewBag.LinkBack)">@lang.Retour</a>
        </div>
        <div class="col push-m6 m2 push-s5 s3">
            <button onclick="validate()" class="btn waves-effect waves-light darken-1 @Html.Raw(ViewBag.ColorButton)" type="submit" name="action">
                @Html.Raw(ViewBag.TextButton)
                <i class="material-icons right hide-on-small-and-down">@Html.Raw(ViewBag.IconButton)</i>
            </button>
        </div>
    </div>
    <input id="Restriction" name="Restriction" type="hidden" value="">
</form>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('select').formSelect();
            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd',
                showClearBtn: true,
                defaultDate: new Date(),
                i18n: {
                    months: ['@lang.Janvier' , '@lang.Fevrier', '@lang.Mars','@lang.Avril', '@lang.Mai', '@lang.Juin', '@lang.Juillet', '@lang.Aout', '@lang.Septembre', '@lang.Octobre', '@lang.Novembre', '@lang.Decembre'],
                    monthsShort: ['@lang.JanvierShort', '@lang.FevrierShort', '@lang.MarsShort', '@lang.AvrilShort', '@lang.MaiShort', '@lang.JuinShort', '@lang.JuilletShort', '@lang.AoutShort', '@lang.SeptembreShort', '@lang.OctobreShort', '@lang.NovembreShort', '@lang.DecembreShort'],
                    weekdays: ['@lang.Dimanche', '@lang.Lundi', '@lang.Mardi', '@lang.Mercredi', '@lang.Jeudi', '@lang.Vendredi', '@lang.Samedi'],
                    weekdaysShort: ['@lang.DimancheShort', '@lang.LundiShort', '@lang.MardiShort', '@lang.MercrediShort', '@lang.JeudiShort', '@lang.VendrediShort', '@lang.SamediShort'],
                    weekdaysAbbrev: ['@lang.DimancheAbbrev', '@lang.LundiAbbrev', '@lang.MardiAbbrev', '@lang.MercrediAbbrev', '@lang.JeudiAbbrev', '@lang.VendrediAbbrev', '@lang.SamediAbbrev'],
                    cancel: '@lang.Annuler',
                    clear: '@lang.Effacer',
                    dateFormat: 'dd-mm-yy'
                }
            });
            $(function () {
                $("#sortable1, #sortable2").sortable({
                    connectWith: ".connectedSortable",
                    update: function (event, ui) { readRestriction(); }
                }).disableSelection();
            });

            fillPossibleRestriction();
        });
    </script>
}
<script type="text/javascript">
    function fillPossibleRestriction() {
        var ulNonActif = document.getElementById("sortable1");
        var ulActif = document.getElementById("sortable2");
        @{
            List<Restriction> lesRestriction = ViewBag.LesRestriction;
            List<int> lesIdRestrictionUtilise = ViewBag.LesRestrictionUtilise;
        }
        var lesRestric = [
        @for (int i = 0; lesRestriction.Count>i;i++ ) {
            if(lesIdRestrictionUtilise.Contains(@lesRestriction[i].IDRestriction))
            {
                @Html.Raw("{ IDRestriction: '" + @lesRestriction[i].IDRestriction.ToString() + "', Titre: '" + @lesRestriction[i].Titre.ToString() + "', Added:'TRUE' }");
            } else
            {
                @Html.Raw("{ IDRestriction: '" + @lesRestriction[i].IDRestriction.ToString() + "', Titre: '" + @lesRestriction[i].Titre.ToString() + "', Added:'FALSE' }");
            }
            if(i<lesRestriction.Count-1)
            {
                @Html.Raw(",");
            }
        }
        ];
        for (i = 0; i < lesRestric.length; i++) {
            var li = document.createElement("li");
            li.appendChild(document.createTextNode(lesRestric[i].Titre.toString()));
            li.setAttribute("id", lesRestric[i].IDRestriction.toString());
            li.setAttribute("class", "ui-state-default ui-sortable-handle hoverable white-text orange darken-2");
            if (lesRestric[i].Added.toString() == "TRUE") {
                ulActif.appendChild(li);
            } else {
                ulNonActif.appendChild(li);
            }

        }

    }
    function readRestriction() {
        var ids = [];
        $('#sortable2 li').each(function () {
            ids.push($(this).attr('id'));
        });
        document.getElementById("Restriction").value = ids.toString() ;
    }
    function validate() {
        readRestriction();
        var isValid = $("#form").validate({
            errorElement: "span",
            rules: {
                TxtMilieuStage: {
                    required: true
                },
                TxtTitre: {
                    required: true
                },
                TxtaDescription: {
                    required: true
                },
                TxtNbPostes: {
                    required: true,
                    pattern: new RegExp(/^\d+$/)
                },
                TxtNombreDHeureParSemaine: {
                    required: true,
                    pattern: new RegExp(/^(0|[1-9]\d*)([,.]\d{1,2})*$/)
                },
                TxtDateDeDebut: {
                    required: true
                },
                TxtDateDeFin: {
                    required: true
                },
            },
            messages: {
                TxtMilieuStage: "@lang.ChampRequis",
                TxtTitre: "@lang.ChampRequis",
                TxtaDescription: "@lang.ChampRequis",
                TxtNbPostes: {
                    required: "@lang.ChampRequis",
                    pattern: "@lang.FormatValideChiffre"
                },
                TxtNombreDHeureParSemaine: {
                    required: "@lang.ChampRequis",
                    pattern: "@lang.FormatValideDecimale"
                },
                TxtDateDeDebut: "@lang.ChampRequis",
                TxtDateDeFin: "@lang.ChampRequis",
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
        if (isValid.form()) {
            M.toast({ html: '@lang.EnregistreSucces', displayLength: 1000, classes: 'rounded', completeCallback: function () { document.form.submit(); } })
        }
        else {
            M.toast({ html: '@lang.ErreurPresenteFormulaire', classes: 'rounded', displayLength: 5000 });
        }
    };
</script>

<style>
    span.error {
        color: red;
        padding-right: 2px;
        padding-left: 2px;
        border: 2px red solid
    }

    #sortable1, #sortable2 {
        border: 1px solid #eee;
        width: 142px;
        min-height: 20px;
        list-style-type: none;
        margin: 0;
        padding: 5px 0 0 0;
        float: left;
        margin-right: 10px;
    }

    #sortable1 li, #sortable2 li {
        margin: 0 5px 5px 5px;
        padding: 5px;
        font-size: 1.2em;
        width: 120px;
    }
</style>







