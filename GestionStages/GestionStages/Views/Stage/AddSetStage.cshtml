
@{
    ViewData["Title"] = ViewBag.PageTitle;
}

<div style="font-size:24px;text-align:center;padding-top:5%" class="light-blue-text row">
    <div class="col s12">
        <i style="font-size:48px;vertical-align:middle;" class="material-icons orange-text">@Html.Raw(ViewBag.IconTitle)</i>
        @ViewBag.PageTitle
    </div>
    <div class="col push-s4 s4">
        <hr />
    </div>
</div>
@{
    if (ViewBag.error != null && ViewBag.error != "")
    {
        @Html.Raw(ViewBag.error);
    }
}

@{
    Stage StageAModifier = ViewBag.LeStage != null ? ViewBag.LeStage : new Stage();
    
    if (StageAModifier.IDStage == 0)
    {
        StageAModifier.Etat = true;
    }

    <form class="col s12" name="form" id="form" method="post" onsubmit="return validateForm()" action="@Url.Action("SaveStage", "Stage", new { id = StageAModifier.IDStage })">
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                <select id="TxtMilieuStage" name="TxtMilieuStage">
                    @{

                        <option value=""> </option>
                        List<MilieuStage> lesMilieus = ViewBag.lesMilieus;
                        for (int i = 0; i < lesMilieus.Count; i++)
                        {
                            <option type="hidden" value="@lesMilieus[i].IDMilieuStage">@lesMilieus[i].Titre</option>
                        }
                    }
                </select>
                @Html.Label("TxtMilieuStage", @lang.ListeMilieuStage)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                @Html.TextBox("TxtTitre", @Html.Raw(StageAModifier.Titre), new { @class = "validate", maxlength = "100", required = "required" })
                @Html.Label("TxtTitre", @lang.Titre)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                <textarea id="TxtaDescription" name="TxtaDescription" class="materialize-textarea validate" maxlength="1000" required>@Html.Raw(StageAModifier.Description)</textarea>
                @Html.Label("TxtaDescription", @lang.Description)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                @Html.TextBox("TxtNbPostes", @Html.Raw(StageAModifier.NbPostes), new { @class = "validate", required = "required" })
                @Html.Label("TxtNbPostes", @lang.NombreDePostes)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                <select id="TxtStatut" name="TxtStatut" class = "Validate" required>
                    <option value="1">@lang.TempsPleins</option>
                    <option value="2">@lang.TempsPartiel</option>
                </select>
                @*@Html.DropDownList("TxtStatut",
                                    new SelectList(Enum.GetValues(typeof(Stage.ListStatut))),
                                    null,
                                    new { @class = "Validate", id = "TxtStatut", name = "TxtStatut", required = "required" })*@
                @Html.Label("TxtStatut", @lang.Statut)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                <select id="TxtPeriodeTravail" name="TxtPeriodeTravail" class="Validate" required>
                    <option value="1">@lang.Jour</option>
                    <option value="2">@lang.Soiree</option>
                    <option value="3">@lang.Nuit</option>
                </select>
                @*@Html.DropDownList("TxtPeriodeTravail",
                                    new SelectList(Enum.GetNames(typeof(Stage.PeriodeDeTravail))),
                                    null,
                                    new { @class = "Validate", id = "TxtPeriodeTravail", name = "TxtPeriodeTravail", required = "required" })*@
                @Html.Label("TxtPeriodeTravail", @lang.PeriodeDeTravail)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                @Html.TextBox("TxtNombreDHeureParSemaine", @Html.Raw(StageAModifier.NbHeureSemaine), new { @class = "validate", required = "required" })
                @Html.Label("TxtNombreDHeureParSemaine", @lang.NombreDHeureParSemaine)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                @Html.TextBox("TxtDateDeDebut", @Html.Raw(StageAModifier.DateDebut), new { @class = "validate", type="date", placeholder = "Placeholder", required = "required" })
                @Html.Label("TxtDateDeDebut", @lang.DateDeDebut)
            </div>
        </div>
        <div class="row">
            
            <div class="input-field col push-s3 s6 ">
                @Html.TextBox("TxtDateDeFin", @Html.Raw(StageAModifier.DateFin), new { @class = "validate", type = "date", placeholder = "Placeholder", required = "required" })
                @Html.Label("TxtDateDeFin", @lang.DateDeFin)
            </div>
        </div>
        <div class="row">
            <div class="input-field col push-s3 s6 ">
                <div class="switch" style="text-align:center">
                    <label>
                        @Html.Label("ChkEtat", @lang.Actif)
                        @Html.CheckBox("ChkEtat", StageAModifier.Etat)
                        <span class="lever"></span>
                        @Html.Label("ChkEtat", @lang.Inactif)
                    </label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col push-s3 s2">
                <a class="waves-effect waves-light btn grey" href="@Html.Raw(ViewBag.LinkBack)">@lang.Retour</a>
            </div>
            <div class="col push-s6 s2">
                <button class="btn waves-effect waves-light darken-1 @Html.Raw(ViewBag.ColorButton)" type="submit" name="action">
                    @Html.Raw(ViewBag.TextButton)
                    <i class="material-icons right">@Html.Raw(ViewBag.IconButton)</i>
                </button>
            </div>
        </div>
    </form>
}
@section Scripts {
    <script>
        $(document).ready(function () {
            $('select').formSelect();
            //$('.datepicker').datepicker();
        });
    </script>
}
<script type="text/javascript">
    function validate() {
        var isValid = $("#form").validate({
            errorElement: "span",
            rules: {
                TxtMilieuStage: {
                    required: true
                },
                TxtTitre: {
                    required: true
                },
                TxtaDescription: {
                    required: true
                },
                TxtNbPostes: {
                    required: true,
                    pattern: new RegExp(/^\d+$/)
                },
                TxtNombreDHeureParSemaine: {
                    required: true,
                    pattern: new RegExp(/^\d+$/)
                },
                TxtDateDeDebut: {
                    required: true
                },
                TxtDateDeFin: {
                    required: true
                }
            },
            message: {
                TxtMilieuStage: "@lang.ChampRequis",
                TxtTitre: "@lang.ChampRequis",
                TxTaDescription: "@lang.ChampRequis",
                TxtNbPostes: {
                    required: "@lang.ChampRequis",
                    pattern: "@lang.FormatValide seulement des chiffres"
                },
                TxtNombreDHeureParSemaine: {
                    required: "@lang.ChampRequis",
                    pattern: "@lang.FormatValide seulement des chiffres"
                },
                TxtDateDeDebut: "@lang.ChampRequis",
                TxtDateDeFin: "@lang.ChampRequis",
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
        if (isValid.form()) {
            M.toast({ html: '@lang.EnregistreSucces', displayLength: 500, classes: 'rounded', completeCallback: function () { document.form.submit(); } })
        }
        else {
            M.toast({ html: '@lang.ErreurPresenteFormulaire', classes: 'rounded', displayLength: 5000 });
        }
    };
</script>
<style>
    span.error {
        color: red;
        padding-right: 2px;
        padding-left: 2px;
        border: 2px red solid
    }
</style>







