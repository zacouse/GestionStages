@{
    ViewData["Title"] = ViewBag.TitrePage;
}

<div style="font-size:36px;padding-top:5%" class="light-blue-text center-align row">
    <div class="col s12">
        <i style="font-size:48px;vertical-align:middle;" class="material-icons orange-text">@Html.Raw(ViewBag.IconeTitre)</i>
        @ViewBag.TitrePage
    </div>
    <div class="col push-l3 l6 push-m2 m8 s12">
        <hr />
    </div>
</div>

@{
    if (ViewBag.error != null && ViewBag.error != "")
    {
        @Html.Raw(ViewBag.error);
    }
}

@{
    MilieuStage MilieuAModifier = ViewBag.Milieu != null ? ViewBag.Milieu : new MilieuStage();
    if (MilieuAModifier.IDMilieuStage == 0)
    {
        MilieuAModifier.Etat = true;
    }
}
<form class="col s12" name="form" id="form" method="post" onsubmit="return validateForm()" action="@Url.Action("SaveMilieuStage", "MilieuStage", new { id = @MilieuAModifier.IDMilieuStage })">
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtTitre" name="TxtTitre" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.Titre)" maxlength="100" required>
            <label for="TxtTitre">@lang.Titre</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <textarea id="TxaDescription" name="TxaDescription" class="materialize-textarea validate" maxlength="1000" required>@Html.Raw(@MilieuAModifier.Description)</textarea>
            <label for="TxaDescription">@lang.Description</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtNoCivique" name="TxtNoCivique" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.NoCivique)" maxlength="10" required>
            <label for="TxtNoCivique">@lang.NumeroCivique</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtRue" name="TxtRue" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.Rue)" maxlength="100" required>
            <label for="TxtRue">@lang.Rue</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtCodePostal" name="TxtCodePostal" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.CodePostal)" maxlength="7" required>
            <label for="TxtCodePostal">@lang.CodePostal</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtVille" name="TxtVille" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.Ville)" maxlength="100" required>
            <label for="TxtVille">@lang.Ville</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtProvince" name="TxtProvince" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.Province)" maxlength="100" required>
            <label for="TxtProvince">@lang.Province</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtPays" name="TxtPays" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.Pays)" maxlength="100" required>
            <label for="TxtPays">@lang.Pays</label>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <input id="TxtNumeroTelephone" name="TxtNumeroTelephone" type="text" class="validate" value="@Html.Raw(@MilieuAModifier.NoTelephone)" maxlength="20" required>
            <label for="TxtNumeroTelephone">@lang.NumeroDeTelephone</label>
        </div>
    </div>
    <div class="row">
        @Html.Label("Restrictions")
        <div id="ListesRestrictions" class="input-field col push-m3 m6 s12">
            <div class="col m4 s6 black-text">
                @Html.Raw("Restrictions possibles")
                <ul id="sortable1" class="connectedSortable grey">
                </ul>
            </div>
            <div id="Apres" class="col push-m4 m4 s6">
                @Html.Raw("Restrictions actives")
                <ul id="sortable2" class="connectedSortable grey">
                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="input-field col push-m3 m6 s12 ">
            <div class="switch" style="text-align:center">
                <label>
                    @lang.Inactif
                    <input id="ChkEtat" name="ChkEtat" type="checkbox" checked="@MilieuAModifier.Etat ">
                    <span class="lever"></span>
                    @lang.Actif
                </label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col push-m3 m2 s4">
            <a class="waves-effect waves-light btn grey" href="@ViewBag.LienRetour">@lang.Retour</a>
        </div>
        <div class="col push-m6 m2 push-s5 s3">
            <button onclick="validate()" class="btn waves-effect waves-light darken-1 @Html.Raw(ViewBag.CouleurBouton)" type="button" name="action">
                @Html.Raw(ViewBag.TexteBouton)
                <i class="material-icons right hide-on-small-and-down">@Html.Raw(ViewBag.IconeBouton)</i>
            </button>
        </div>
    </div>
    <input id="Restriction" name="Restriction" type="hidden" value="">
</form>

@section Scripts {
    <script >
        $(document).ready(function () {
            /***********************************************************/
            $(function () {
                $("#sortable1, #sortable2").sortable({
                    connectWith: ".connectedSortable",
                    update: function (event, ui) { readRestriction(); }
                }).disableSelection();
            });

            fillPossibleRestriction();
            /***********************************************************/
        });
    </script>
}
<script type='text/javascript'>
    function fillPossibleRestriction() {
        var ulNonActif = document.getElementById("sortable1");
        var ulActif = document.getElementById("sortable2");
        @{
            List<Restriction> lesRestriction = ViewBag.LesRestriction;
            List<int> lesIdRestrictionUtilise = ViewBag.LesRestrictionUtilise;
        }
        var lesRestric = [
        @for (int i = 0; lesRestriction.Count>i;i++ ) {
            if(lesIdRestrictionUtilise.Contains(@lesRestriction[i].IDRestriction))
            {
                @Html.Raw("{ IDRestriction: '" + @lesRestriction[i].IDRestriction.ToString() + "', Titre: '" + @lesRestriction[i].Titre.ToString() + "', Added:'TRUE' }");
            } else
            {
                @Html.Raw("{ IDRestriction: '" + @lesRestriction[i].IDRestriction.ToString() + "', Titre: '" + @lesRestriction[i].Titre.ToString() + "', Added:'FALSE' }");
            }
            if(i<lesRestriction.Count-1)
            {
                @Html.Raw(",");
            }
        }
        ];
        for (i = 0; i < lesRestric.length; i++) {
            var li = document.createElement("li");
            li.appendChild(document.createTextNode(lesRestric[i].Titre.toString()));
            li.setAttribute("id", lesRestric[i].IDRestriction.toString());
            li.setAttribute("class", "ui-state-default ui-sortable-handle hoverable white-text orange darken-2");
            if (lesRestric[i].Added.toString() == "TRUE") {
                ulActif.appendChild(li);
            } else {
                ulNonActif.appendChild(li);
            }

        }

    }
    function readRestriction() {
        var ids = [];
        $('#sortable2 li').each(function () {
            ids.push($(this).attr('id'));
        });
        document.getElementById("Restriction").value = ids.toString() ;
    }
    function validate() {
        var isValid = $("#form").validate({
            errorElement: "span",
            rules: {
                TxtTitre: {
                    required: true
                },
                TxaDescription: {
                    required: true
                },
                TxtCodePostal: {
                    required: true,
                    pattern: new RegExp(/^[A-Z]\d[A-Z]\s\d[A-Z]\d$/)
                },
                TxtNoCivique: {
                    required: true
                },
                TxtRue: {
                    required: true
                },
                TxtVille: {
                    required: true
                },
                TxtProvince: {
                    required: true
                },
                TxtPays: {
                    required: true
                },
                TxtNumeroTelephone: {
                    required: true,
                    pattern: new RegExp(/^\(\d{3}\)-\d{3}-\d{4}$/)
                }
            },
            messages: {
                TxtTitre: "@lang.ChampRequis",
                TxaDescription: "@lang.ChampRequis",
                TxtNoCivique:"@lang.ChampRequis",
                TxtRue:"@lang.ChampRequis",
                TxtVille:"@lang.ChampRequis",
                TxtProvince:"@lang.ChampRequis",
                TxtPays:"@lang.ChampRequis",
                TxtNumeroTelephone: {
                    required: "@lang.ChampRequis",
                    pattern: "@lang.FormatValide ex: (111)-111-1111"
                },
                TxtCodePostal: {
                    required: "@lang.ChampRequis",
                    pattern: "@lang.FormatValide ex: A1A 1A1"
                },
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
        if (isValid.form()) {
            M.toast({ html: '@lang.EnregistreSucces', displayLength: 1000, classes: 'rounded', completeCallback: function () { document.form.submit(); } })
        }
        else {
            M.toast({ html: '@lang.ErreurPresenteFormulaire', classes: 'rounded', displayLength: 5000 });
        }
    };
</script>

<style>
    span.error {
        color: red;
        padding-right: 2px;
        padding-left: 2px;
        border: 2px red solid
    }
    #sortable1, #sortable2 {
        border: 1px solid #eee;
        width: 142px;
        min-height: 20px;
        list-style-type: none;
        margin: 0;
        padding: 5px 0 0 0;
        float: left;
        margin-right: 10px;
    }

        #sortable1 li, #sortable2 li {
            margin: 0 5px 5px 5px;
            padding: 5px;
            font-size: 1.2em;
            width: 120px;
        }
</style>
