<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Hello" xml:space="preserve">
		<value>Hello</value>
	</data>
	<data name="Welcome" xml:space="preserve">
		<value>Welcome</value>
	</data>
	<data name="Titre" xml:space="preserve">
		<value>Title</value>
	</data>
	<data name="Description" xml:space="preserve">
		<value>Description</value>
	</data>
	<data name="Adresse" xml:space="preserve">
		<value>Address</value>
	</data>
	<data name="ListeMilieuStage" xml:space="preserve">
		<value>Internship site list</value>
	</data>
	<data name="Ville" xml:space="preserve">
		<value>City</value>
	</data>
	<data name="Telephone" xml:space="preserve">
		<value>Phone</value>
	</data>
	<data name="FiltreDeRecherche" xml:space="preserve">
		<value>Search criteria</value>
	</data>
	<data name="MilieuDeStagesDisponibles" xml:space="preserve">
		<value>Available Internship site </value>
	</data>
	<data name="Imprimer" xml:space="preserve">
		<value>Print</value>
	</data>
	<data name="Retour" xml:space="preserve">
		<value>Back</value>
	</data>
	<data name="Ajouter" xml:space="preserve">
		<value>Add</value>
	</data>
	<data name="NumeroCivique" xml:space="preserve">
		<value>Civic number</value>
	</data>
	<data name="Rue" xml:space="preserve">
		<value>Road</value>
	</data>
	<data name="CodePostal" xml:space="preserve">
		<value>Post code</value>
	</data>
	<data name="Province" xml:space="preserve">
		<value>Province</value>
	</data>
	<data name="Pays" xml:space="preserve">
		<value>Country</value>
	</data>
	<data name="NumeroDeTelephone" xml:space="preserve">
		<value>Phone number</value>
	</data>
	<data name="Actif" xml:space="preserve">
		<value>Active</value>
	</data>
	<data name="AjouterUnMilieuDeStage" xml:space="preserve">
		<value>Add an internship site</value>
	</data>
	<data name="ModifierUnMilieuDeStage" xml:space="preserve">
		<value>Update an internship site</value>
	</data>
	<data name="Modifier" xml:space="preserve">
		<value>Update</value>
	</data>
	<data name="VisionnerUnMilieuDeStage" xml:space="preserve">
		<value>View an internship site</value>
	</data>
	<data name="StagesDisponiblesDansCeMilieu" xml:space="preserve">
		<value>Intership available at this site</value>
	</data>
	<data name="MilieuDeStage" xml:space="preserve">
		<value>Intership site</value>
	</data>
	<data name="PeriodeDeTravail" xml:space="preserve">
		<value>Work shift</value>
	</data>
	<data name="NombreDHeureParSemaine" xml:space="preserve">
		<value>Weekly work hours</value>
	</data>
	<data name="Statut" xml:space="preserve">
		<value>Status</value>
	</data>
	<data name="DateDeDebut" xml:space="preserve">
		<value>Start date</value>
	</data>
	<data name="DateDeFin" xml:space="preserve">
		<value>End date</value>
	</data>
	<data name="CreerUneCopie" xml:space="preserve">
		<value>Duplicate</value>
	</data>
	<data name="Jour" xml:space="preserve">
		<value>Day</value>
	</data>
	<data name="Soiree" xml:space="preserve">
		<value>Evening</value>
	</data>
	<data name="Nuit" xml:space="preserve">
		<value>Night</value>
	</data>
	<data name="TempsPartiel" xml:space="preserve">
		<value>Part-time</value>
	</data>
	<data name="TempsPleins" xml:space="preserve">
		<value>Full-Time</value>
	</data>
	<data name="Inactif" xml:space="preserve">
		<value>Disabled</value>
	</data>
	<data name="Creer" xml:space="preserve">
		<value>Create</value>
	</data>
	<data name="EnregistreSucces" xml:space="preserve">
		<value>Sucessfully saved!</value>
	</data>
	<data name="ErreurPresenteFormulaire" xml:space="preserve">
		<value>Form contain one or more error</value>
	</data>
	<data name="FormatValide" xml:space="preserve">
		<value>Use a valid format.</value>
	</data>
	<data name="ChampRequis" xml:space="preserve">
		<value>Required field</value>
	</data>
	<data name="AjouterUnStage" xml:space="preserve">
		<value>Add an intership</value>
	</data>
	<data name="ListeStage" xml:space="preserve">
		<value>Internship list</value>
	</data>
	<data name="ModifierUnStage" xml:space="preserve">
		<value>Update an internship</value>
	</data>
	<data name="VisionnerUnStage" xml:space="preserve">
		<value>View an internship</value>
	</data>
	<data name="NombreDePostes" xml:space="preserve">
		<value>Available workstation</value>
	</data>
	<data name="Voir" xml:space="preserve">
		<value>See</value>
	</data>
	<data name="Rechercher" xml:space="preserve">
		<value>Search</value>
	</data>
	<data name="NombreMaximumDHeureSemaine" xml:space="preserve">
		<value>Maximum weekly work hours</value>
	</data>
	<data name="NombreMinimumDHeureSemaine" xml:space="preserve">
		<value>Minimal weekly work hours</value>
	</data>
	<data name="Reset" xml:space="preserve">
		<value>Reset</value>
	</data>
</root>